
2019-03-02 09:28 GMT+7 PyIRCIoT 0.0.75 Alexey Y. Woronov <alexey@woronov.ru>
	* An additional field VUID (Virtual User ID) has been added to the
	interaction Queues with PyLayerIRC. Please note that you need to make
	changes to your IRC-IoT robots.

2019-03-08 09:03 GMT+7 PyIRCIoT 0.0.79 Alexey Y. Woronov <alexey@woronov.ru>
	* Since version 0.0.79 for all PyLayerIRCIoT methods with the name
	beginning with irciot_deinencap*_ a new optional argument is added:
	in_vuid (Virtual User ID). Also, added maintenance of a database of
	Virtual Users at the level of the IRC protocol. The database is
	consist	of two parts: Preconfigured users, and previously unknown
	users appeared on IRC. To work with unknown users, you must set the
	key irc_talk_with_stranges to True. The processing of service IRC-IoT
	messages with the object type "bchnfo" (Blockchain Informational msg.)
	and the addition of cryptographic keys from this message to the Virtual
	Users database has been added.

2019-04-26 19:30 GMT+7 PyIRCIoT 0.0.107 Alexey Y. Woronov <alexey@woronov.ru>
        * Since Version 0.0.107 in all methods of PyLayerIRCIoT new optional
        parameter has been added: in_vuid (Virtual User ID), by default: None
        In API beetwen PyLayerIRCIoT and any transport class new method added:
        with index api_GET_VUID = 700, and optional parameters 'in_vuid':
        'c': get configured VUIDs, 't': get temporal VUIDs, '*': get all VUIDs
        Also, the new transport class PyLayerCOM added in the file rfc2217.py

2019-04-27 12:30 GMT+7 PyIRCIoT 0.0.108 Alexey Y. Woronov <alexey@woronov.ru>
        * Since Version 0.0.108; Previously PyLayerIRCIoT.irciot_encap_all_()
        method returned an array (list) of strings, now it returns array of
        touples containing string and VUID. Similar changes were made to the
        parameters of PyLayerIRC.irc_handler_(). Please make the corrections.

2019-05-01 15:00 GMT+7 PyIRCIoT 0.0.112 Alexey Y. Woronov <alexey@woronov.ru>
        * In API beetwen PyLayerIRCIoT and transport classes new methods has
        been added: api_GET_OMID = 111, and api_SET_OMID = 112, argument: VUID
        Methods api_GET_LMID, api_GET_OMID now returns the set, not a single
        Message ID. In the PyLayerIRC class, a pipeline of Message IDs created
        separately own, and taken from other robots. The size of the pipeline
        is set by the constant: PyLayerIRC.CONST.irc_default_mid_pipeline_size

